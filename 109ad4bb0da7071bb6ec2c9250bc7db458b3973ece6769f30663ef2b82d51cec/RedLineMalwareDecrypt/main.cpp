/*
 _   __ _____ _____  _    _ _   _
| | / /|  ___|  _  || |  | | | | |
| |/ / | |__ | | | || |  | | | | |
|    \ |  __|| | | || |/\| | | | |
| |\  \| |___\ \_/ /\  /\  / |_| |
\_| \_/\____/ \___/  \/  \/ \___/
                            2023
Copyright (c) Fluxuss Cyber Tech Desenvolvimento de Software, SLU (FLUXUSS)
Copyright (c) Fluxuss Software Security, LLC

*/
#include <iostream>
#include <memory>
#include "filesystem/file_system_working.hh"
#include "tools/dropped_file_decrypt.hh"
#include "tools/shellcode_file_decrypt.hh"
#include "tools/decrypt_redline_strings.hh"

#define TEST_1(fileSysPair) std::printf("FileSize: %ld\n", fileSysPair.first);

int main(int, char**) {

    std::cout << "Hello, world!\n";

    /*
        ____________________________________________________________________________________________________________________________________________________________________________________________________
                                                DECRYPT DROPPED PE FILE
        ____________________________________________________________________________________________________________________________________________________________________________________________________
    */
    auto fileSysPair = FileSystemWorking::read_all_file_get_data("/home/keowu/Downloads/redline stealer/109ad4bb0da7071bb6ec2c9250bc7db458b3973ece6769f30663ef2b82d51cec/redlinepayload.bin");

    TEST_1(fileSysPair);

    std::unique_ptr<DropedFile> drop(new DropedFile("3DXT67NOnX73RiZjiUAraRf4wwNyVt616JdkoEo9EB4YxW7sGNGye3Ng9gWK8Nqey", fileSysPair.second, fileSysPair.first));

    auto ret = drop->decrypt();
    drop->test();

    FileSystemWorking::write_all_file_data_on_disk("/home/keowu/Downloads/redline stealer/109ad4bb0da7071bb6ec2c9250bc7db458b3973ece6769f30663ef2b82d51cec/redlinepayloadOutxxxxx.bin", ret, fileSysPair.first);

    
    /*
        ____________________________________________________________________________________________________________________________________________________________________________________________________
                                                DECRYPT SHELLCODE SECTION
        ____________________________________________________________________________________________________________________________________________________________________________________________________
    */
    fileSysPair = FileSystemWorking::read_all_file_get_data("/home/keowu/Downloads/redline stealer/109ad4bb0da7071bb6ec2c9250bc7db458b3973ece6769f30663ef2b82d51cec/PayloadEncryptedShellcode.bin");

    TEST_1(fileSysPair);

    std::unique_ptr<ShellCode> shellcode(new ShellCode("i0obyn5qI9oIjhZomyP3WuLL8D7ubrvlKZbRHl6n1iJtwekaJjgWmzfA1s4CwmDEs", fileSysPair.second, fileSysPair.first, 0x42u));

    ret = shellcode->decrypt();

    FileSystemWorking::write_all_file_data_on_disk("/home/keowu/Downloads/redline stealer/109ad4bb0da7071bb6ec2c9250bc7db458b3973ece6769f30663ef2b82d51cec/PayloadEncryptedShellcodedexxxx.bin", ret, fileSysPair.first);

    /*
        ____________________________________________________________________________________________________________________________________________________________________________________________________
                                                DECRYPT REDLINE STRINGS
        ____________________________________________________________________________________________________________________________________________________________________________________________________
    */
    auto decrypted = DecryptRedLine::decryptString("DjwGQy0JChM/KS0WPCJXWio3LBAsGDQZJwNOfg==", "Characids");

    std::cout << decrypted << "\n";

    decrypted = DecryptRedLine::decryptString("IFsrGAJRAVYQcQBR", "Characids");

    std::cout << decrypted << "\n";

    return 0;
}
